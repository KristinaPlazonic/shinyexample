?lm
lm(mpg ~ weight, data = mtcars)
lm(mpg ~ weight, mtcars)
lm(mtcars$mpg ~ mtcars$weight)
dim(mtcars)
head(mtcars)
lm(mpg ~ wt, mtcars)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x = x-mean(x)
x = x/sd(x)
mean(x)
sd(x)
x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y ~ x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
x*y
sum(x*y)/sum(x*x)
swirl()
lm(child ~ ones + parent -1, galton)
lm(child ~ ones + parent, galton)
lm(child ~ 1, galton)
View(trees)
fit -< lm(Volume ~ Girth + Height + Constant -1, trees)
fit <- lm(Volume ~ Girth + Height + Constant -1, trees)
trees2 <- eliminate("Girth", trees)
head(trees2)
fit2 <- lm(Volume ~ Height + Const -1, trees2)
fit2 <- lm(Volume ~ Height + Constant -1, trees2)
lapply(list(fit, fit2), coef)
plot(child~parent, galton)
plot( jitter(child,4) ~ parent, galton)
regrline <- lm(child ~ parent, galton)
abline(regrline, lwd=3, col = 'red')
summary(regrline)
library(manipulate)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
library(rcharts)
install.packages("rcharts")
library(devtools)
install.packages("devtools")
install.packages("shiny")
setwd("~/learning/coursera/dev_data_products_course9")
setwd("~/learning/coursera/dev_data_products_course9/shiny")
{c(1)}
class({c(1)})
runApp()
library(devtools)
library(shiny)
runApp()
directory = getwd()
directory
directory = "/home/kris/learning/coursera/rprog_course2/specdata/"
234+".csv"
as.character(234)+".csv"
?format
sprintf("%s%d.csv", directory, 11)
sprintf("%s%f3.0.csv", directory, 196)
sprintf("%s%3.0f.csv", directory, 196)
sprintf("%s%3.0f.csv", directory, 1)
sprintf("%s%d3d.csv", directory, 1)
sprintf("%s%3d.csv", directory, 1)
sprintf("%1$d %1$x %1$X", 0:15)
n <- 1:18
sprintf(paste0("e with %2d digits = %.", n, "g"), n, exp(1))
?format
sprintf("%s%3.0f.csv", directory, 196)
fn = sprintf("%s%3.0f.csv", directory, 196)
a = read.csv(fn)
head(a)
?as.character
as.character(1, digits = 3)
form <- y ~ a + b + c
as.character(form)  ## length 3
deparse(form)       ## like the input
length(directory)
size(directory)
len(directory)
?character
?concat
??concat
"aaa"+"bb"
paste("aaa","bb")
paste("aaa","bb", sep="")
paste0("aaa","bb", sep="")
paste0("aaa","bb")
nchar(directory)
ifelse(i<10 & i>0, paste0("00",as.character(i)), ifelse(i>=10 & i<=99, paste0("0", as.character(i))))
i
i = 13
ifelse(i<10 & i>0, paste0("00",as.character(i)), ifelse(i>=10 & i<=99, paste0("0", as.character(i))))
i = 333
ifelse(i<10 & i>0, paste0("00",as.character(i)), ifelse(i>=10 & i<=99, paste0("0", as.character(i))))
ifelse(i<10 & i>0, paste0("00",as.character(i)), ifelse(i>=10 & i<=99, paste0("0", as.character(i)), as.character(i)))
pol = NULL;
a = read.csv(fn)
pollutant = "nitrate"
if (pollutant == "nitrate") mp = a$nitrate
mp = mp[!is.na(mp)]   # omit the na's
pol = rbind(pol, mp)  # append the column to pol
head(pol)
pol = NULL;
pol = cbind(pol, mp)  # append the column to pol
head(pol)
class(mp)
class(mp)
dims(mp)
dim(mp)
size(mp)
ndim(mp)
nrow(mp)
if (pollutant == "nitrate") mp = a$nitrate
nrow(mp)
mp
?vector
length(mp)
class(mp)
?array
is.array(mp)
is.vector(mp)
?cbind
m <- cbind(1, 1:7) # the '1' (= shorter vector) is recycled
m
?NULL
pol = NULL
pol = as.vector(pol)
class(pol)
pol = cbind(pol, mp[1:10])
pol
pol = NULL
pol = as.vector(pol)
pol = rbind(pol, mp[1:10])
pol
pol = rbind(pol, mp[1:10])
pol
install_from_swirl("R_programming")
?swirl
install_from_swirl("R_Programming")
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf = num_vect <1
tf <- num_vect <1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Tina")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_map
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- sapply(flags, unique)
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population,
| flags$red, summary)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
nrow(mp)
mp
source(pollutantmean.R)
source("pollutantmean.R")
setwd(directory)
getwd()
cd ..
cd("..")
?cd
?changedir
setwd("/home/kris/learning/coursera/rprog_course2/")
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
id = 23
sprintf("id is %s", as.character(id))
fn = sprintf("%s/%s.csv", directory, num)  ## file name
print(fn)
a = read.csv(fn)
for(i in id){print(i)}
directory
num
i
num = ifelse(i<10 & i>0, paste0("00",as.character(i)),
ifelse(i>=10 & i<=99, paste0("0", as.character(i)),
as.character(i)))
num
fn = sprintf("%s/%s.csv", directory, num)  ## file name
fh
fn
a = read.csv(fn)
pollutant = "sulfate"
if (pollutant == "sulfate") mp = a$sulfate
s = 0;
n = 0
sprintf("id is %s", as.character(id))
mp = mp[!is.na(mp)]   # omit the na's
s = s + sum(mp)
n = n + sum(!is.na(mp))
s
n
pollutant = "nitrate"
s = 0;
n = 0
sprintf("id is %s", as.character(id))
if (pollutant == "nitrate") mp = a$nitrate
if (pollutant == "sulfate") mp = a$sulfate
mp = mp[!is.na(mp)]   # omit the na's
s = s + sum(mp)
n = n + sum(!is.na(mp))
s, n
s
n
s/n
source("pollutantmean.R")
getwd
getwd()
pollutantmean("specdata", "nitrate", 23)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 1:10)
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("submitscript1.R")
source("submitscript1.R")
submit()
c()
df = data.frame("id" = c(), "nobs" = c() )
df
complete.cases(a)
sum(complete.cases(a))
df
df[-1,] = c(1,23)
df[1,] = c(1,23)
df
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my)data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames()
colnames(my_data) = cnames
colnames(my_data) <- cnames
my_data
df
df
head(df)
print(df)
df[1,1] = 1
df[1,2] = 4
df
df = data.frame("id" = c(), "nobs" = c())
df
df = rbind(df, c(1,1))
df
df = data.frame()
df
colnames(df) = c("id", "nobs")
?data.frame
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
dd <- cbind(d, char = I(letters[1:10])))
rbind(class = sapply(dd, class), mode = sapply(dd, mode))
(dd <- cbind(d, char = I(letters[1:10])))
rbind(class = sapply(dd, class), mode = sapply(dd, mode))
source("complete.R")
complete("specdata", 1)
colnames(df) = c("id", "nobs")
dim(df)
df
i
i = 1
for (i in id){
num = ifelse(i<10 & i>0, paste0("00",as.character(i)),
ifelse(i>=10 & i<=99, paste0("0", as.character(i)),
as.character(i)))      ### padding the number 1 to be 001, etc.
fn = sprintf("%s/%s.csv", directory, num)  ## file name
print(fn)
a = read.csv(fn)
df = rbind(df, c(i, sum(complete.cases(a))))
}
i
i = 1
for (i in id){
num = ifelse(i<10 & i>0, paste0("00",as.character(i)),
ifelse(i>=10 & i<=99, paste0("0", as.character(i)),
as.character(i)))      ### padding the number 1 to be 001, etc.
fn = sprintf("%s/%s.csv", directory, num)  ## file name
print(fn)
a = read.csv(fn)
df = rbind(df, c(i, sum(complete.cases(a))))
}
id
id = 1
df = data.frame("id" = c(), "nobs" = c() )
for (i in id){
num = ifelse(i<10 & i>0, paste0("00",as.character(i)),
ifelse(i>=10 & i<=99, paste0("0", as.character(i)),
as.character(i)))      ### padding the number 1 to be 001, etc.
fn = sprintf("%s/%s.csv", directory, num)  ## file name
print(fn)
a = read.csv(fn)
df = rbind(df, c(i, sum(complete.cases(a))))
}
df
colnames(df) = c("id", "nobs")
df
source("complete.R")
complete("specdata",1)
submit()
ls()
dir()
dir("specdata")
directory
dir(directory)
c(c(), 3)
c(c(c(), 3), 4)
?cor
threshold = 1
res = c()
good = complete.cases(a) & a$nitrate > threshold & a$sulfate > threshold
res = c(res, cor(a$nitrate[good], a$sulfate[good]))
res
source("corr.R")
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
myc = cor(a$nitrate[good], a$sulfate[good])
res = c(res, myc)
myc
dir(directory)[1:3]
fn
fn1 = dir(directory)[1]
filename = sprintf("%s/%s", directory, fn1)
a = read.csv(filename)
good = complete.cases(a) & a$nitrate > threshold & a$sulfate > threshold
sum(good)
threshold
threshold = 150
good = complete.cases(a) & a$nitrate > threshold & a$sulfate > threshold
sum(good)
myc = cor(a$nitrate[good], a$sulfate[good])
myc
source("corr.R")
cr <- corr("specdata", 150)
head(cr)
source("corr.R")
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
a = read.csv(filename)
a = a[complete.cases(a)]
a = a[complete.cases(a),]
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
threshold
source("corr.R")
corr("specdata", 150)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
q
q
submit()
swirl()
fit <- lm(child ~ parent, galton)
summary(fit)
mean(fit$residuals)
cov(fit$residuals, galton$parent)
ols.ic <- fit$coef[1]
ols.slope <- fit$coef[2]
rhs - lhs
lhs - rhs
all.equal(lhs, rhs)
varChild <- var(galton$child)
varRes <- var(fit$residuals)
varEst <- var(est(ols.slope, ols.ic))
all.equal(varChild, varRes + varEst)
efit <- lm(accel ~ mag+dist, attenu)
mean(efit$residuals)
cov(efit$residuals, attenu$mag)
cov(efit$residuals, attenu$dist)
setwd("~/learning/coursera/dev_data_products_course9/shiny")
getwd()
runApp()
library(datasets)
dataset(iris)
data(iris)
mean(iris$Sepal.Length[iris$species == "virginica"])
mean(iris$Sepal.Length[iris$species == "virginica"], na.rm)
mean(iris$Sepal.Length[iris$species == "virginica"], na.rm = TRUE)
nrow(iris[iris$species == "virginica"])
colnames(iris)
nrow(iris[iris$Species == "virginica"])
nrow(iris[iris$Species == "virginica",])
iris$Sepal.Length[iris$Species == "virginica",]
iris$Sepal.Length[iris$Species == "virginica"]
tapply(iris, iris$Species , mean)
tapply(iris, Species, mean)
str(iris)
tapply(iris, Species, mean)
tapply(iris, iris$Species, mean)
tapply(iris, unique(iris$Species), mean)
unique(iris$Species)
iris %>% filter(Species == "virginica") %>% select(Sepal.Length) %>% summarise(mean)
colnames(iris)
iris %>% filter(Species == "virginica") %>% summarise(mean)
iris %>% filter(Species == "virginica")
iris %>% filter(Species == "virginica") %>% select(1)
?select
colnames(iris)
iris %>% filter(Species == "virginica") %>% select(Sepal.Length)
iris %>% filter(Species == "virginica") %>% select(starts_with("Sepal"))
select(iris, Sepal.Length)
select(iris, Petal.Length, Petal.Width)
library(dplyr)
select(iris, Petal.Length, Petal.Width)
dplyr::select(iris, Petal.Length, Petal.Width)
iris %>% filter(Species == "virginica") %>% dplyr::select(Sepal.Length) %>% summarise(mean)
iris %>% filter(Species == "virginica") %>% dplyr::select(Sepal.Length) %>% dplyr::summarise(mean)
?summarize
summarize(group_by(iris, Species), mean(Sepal.Length))
dplyr::summarize(group_by(iris, Species), mean(Sepal.Length))
v = iris[iris$Species == "virginica"]
v = iris[iris$Species == "virginica", "Sepal.Length"]
v
mean(v)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
data(mtcars)
tapply(mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
a = sapply(split(mtcars$hp, mtcars$cyl), mean)
a[3] - a[1]
debug(ls)
ls()
q
